{"version":3,"file":"static/js/318.884f575e.chunk.js","mappings":"0NACA,EAA4B,+BAA5B,EAAkE,0BAAlE,EAAyG,gCAAzG,EAAgJ,0BAAhJ,EAAiL,0B,SCElK,SAASA,EAAT,GAAmC,IACxCC,EADuC,EAAXC,QAC5BD,QAER,OADAE,QAAQC,IAAIH,IAEV,gBAAKI,UAAWC,EAAhB,UACE,eAAID,UAAWC,EAAf,SACsB,IAAnBL,EAAQM,QACP,cAAGF,UAAWC,EAAd,qDAEAL,EAAQO,KAAI,gBAAGC,EAAH,EAAGA,GAAIC,EAAP,EAAOA,OAAQC,EAAf,EAAeA,QAAf,OACV,gBAAIN,UAAWC,EAAf,WACE,eAAGD,UAAWC,EAAd,UAAyBI,EAAzB,QACA,cAAGL,UAAWC,EAAd,SAA+BK,MAFHF,EADpB,OAUrB,CCjBc,SAASG,IACtB,IAAQC,GAAWC,EAAAA,EAAAA,MAAXD,OACR,GAA8BE,EAAAA,EAAAA,YAA9B,eAAOb,EAAP,KAAgBc,EAAhB,KACA,GAA0BD,EAAAA,EAAAA,UAAS,IAAnC,eAAOE,EAAP,KAAcC,EAAd,KAiBA,OAfAC,EAAAA,EAAAA,YAAU,YACRC,EAAAA,EAAAA,IAAaP,GACVQ,MAAK,SAAAnB,GACmB,IAAnBA,EAAQK,OAKZS,EAAWd,GAJTgB,EAAS,iCAKZ,IACAI,OAAM,SAAAL,GACLC,EAASD,EACV,GACJ,GAAE,CAACJ,KAGF,gCACGI,IAAS,wBAAKA,EAAMM,UACpBrB,IAAW,SAACF,EAAD,CAAaE,QAASA,MAGvC,C","sources":["webpack://react-homework-template/./src/pages/ReviewsPage/ReviewsPage.module.css?3ad9","pages/ReviewsPage/ReviewsPage.js","components/Reviews/Reviews.js"],"sourcesContent":["// extracted by mini-css-extract-plugin\nexport default {\"container\":\"ReviewsPage_container__YnmPG\",\"text\":\"ReviewsPage_text__JDMhb\",\"textReview\":\"ReviewsPage_textReview__i8kgz\",\"list\":\"ReviewsPage_list__IK83Q\",\"card\":\"ReviewsPage_card__G7+f4\"};","import css from './ReviewsPage.module.css';\nimport PropTypes from 'prop-types';\n\nexport default function ReviewsPage({ reviews }) {\n  const { results } = reviews;\n  console.log(results);\n  return (\n    <div className={css.container}>\n      <ul className={css.list}>\n        {results.length === 0 ? (\n          <p className={css.text}>There are no reviews yet for this movie</p>\n        ) : (\n          results.map(({ id, author, content }) => (\n            <li className={css.card} key={id}>\n              <p className={css.text}>{author}:</p>\n              <p className={css.textReview}>{content}</p>\n            </li>\n          ))\n        )}\n      </ul>\n    </div>\n  );\n}\nReviewsPage.propTypes = {\n  reviews: PropTypes.array.isRequired,\n};\n","import { fetchReviews } from 'services/fetch';\nimport { useEffect, useState } from 'react';\nimport { useParams } from 'react-router-dom';\nimport ReviewsPage from 'pages/ReviewsPage/ReviewsPage';\n\nexport default function Reviews() {\n  const { itemId } = useParams();\n  const [reviews, setReviews] = useState();\n  const [error, setError] = useState('');\n\n  useEffect(() => {\n    fetchReviews(itemId)\n      .then(reviews => {\n        if (reviews.length === 0) {\n          setError('There is no review information');\n          return;\n        }\n\n        setReviews(reviews);\n      })\n      .catch(error => {\n        setError(error);\n      });\n  }, [itemId]);\n\n  return (\n    <>\n      {error && <h1>{error.message}</h1>}\n      {reviews && <ReviewsPage reviews={reviews} />}\n    </>\n  );\n}\n"],"names":["ReviewsPage","results","reviews","console","log","className","css","length","map","id","author","content","Reviews","itemId","useParams","useState","setReviews","error","setError","useEffect","fetchReviews","then","catch","message"],"sourceRoot":""}